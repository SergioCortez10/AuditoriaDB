/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package traductorbd;

import cx.Conexion;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.table.DefaultTableModel;


public class gui extends javax.swing.JFrame {

    Conexion c = new Conexion();
    Statement st, st2;
    ResultSet rs, rs2;
    String comando = "",comando2 ="";
    String bd ="";
    String tabla = "";
    ArrayList<String>columnas = new ArrayList<String>();
    ArrayList<String>tipo = new ArrayList<String>();
    ArrayList<String>columnas2 = new ArrayList<String>();
    ArrayList<String>tipo2 = new ArrayList<String>();
    ArrayList<String>tablas = new ArrayList<String>();
    
    
    public gui() {
        initComponents();
        cargarBases();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btmLimpiar = new javax.swing.JButton();
        cmbDataBase = new javax.swing.JComboBox<>();
        cmbTablas = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtXML = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtTablas = new javax.swing.JTextArea();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        jMenuItem1.setText("jMenuItem1");

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Bases de datos");

        jLabel2.setText("Tablas");

        jButton1.setText("Generar auditoria");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btmLimpiar.setText("Limpiar");
        btmLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmLimpiarActionPerformed(evt);
            }
        });

        cmbDataBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDataBaseActionPerformed(evt);
            }
        });

        cmbTablas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTablasActionPerformed(evt);
            }
        });

        txtXML.setColumns(20);
        txtXML.setFont(new java.awt.Font("Leelawadee", 0, 13)); // NOI18N
        txtXML.setRows(5);
        jScrollPane2.setViewportView(txtXML);

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDatos);

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        txtTablas.setColumns(20);
        txtTablas.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        txtTablas.setRows(5);
        jScrollPane3.setViewportView(txtTablas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(cmbDataBase, 0, 159, Short.MAX_VALUE)
                            .addComponent(cmbTablas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(594, 594, 594)
                        .addComponent(btmLimpiar)
                        .addGap(26, 26, 26)
                        .addComponent(btnSalir))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 875, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(14, 14, 14)
                        .addComponent(cmbDataBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalir)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(btmLimpiar)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btmLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmLimpiarActionPerformed
        txtXML.setText("");
        txtTablas.setText("");
        tablas.clear();
    }//GEN-LAST:event_btmLimpiarActionPerformed

    private void cmbDataBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDataBaseActionPerformed
        try{
            cmbTablas.removeAllItems();
            bd = cmbDataBase.getSelectedItem().toString();
            System.out.println(""+ bd);
            comando = "use " + bd;
            st = c.conectar().createStatement();
            st.execute(comando);
            comando  = "show tables";
            rs = st.executeQuery(comando);
            int i = 0;
            while(rs.next()){
                i++;
                cmbTablas.addItem(rs.getString("Tables_in_" + bd));
            }
        }catch(SQLException ex){
        ex.printStackTrace();
        }
    }//GEN-LAST:event_cmbDataBaseActionPerformed

    private void cmbTablasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTablasActionPerformed
       if(cmbTablas.getItemCount()>0){
            DefaultTableModel model = new DefaultTableModel();
            try{
                tabla = cmbTablas.getSelectedItem().toString();
                String c3 = "desc " + tabla;
                Statement st4 = c.conectar().createStatement();
                st4.execute("use " + bd);
                ResultSet rs3 = st4.executeQuery(c3);
                columnas.clear();
                //tipo.clear();
                
                while(rs3.next()){
                    model.addColumn(rs3.getString("Field"));
                    columnas.add(rs3.getString("Field"));
                    tipo.add(rs3.getString("Type"));
                }
                int col=model.getColumnCount();
                System.out.println("Numero decolumnas " + col);
                String c4 = "SELECT * FROM " + tabla;
                ResultSet rs4 = st4.executeQuery(c4);
                while(rs4.next()){
                    Object objeto[]= new Object[col];
                    for(int i=0;i<col;i++){
                        objeto[i]=rs4.getObject(i+1);
                    }
                    model.addRow(objeto);
                }
                tblDatos.setModel(model);
            }catch(SQLException ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_cmbTablasActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            tablas.add(tabla);            
            String tab = "";
            String tab2="";
            String ins="",uno="",dos="";
            String mod="";
            String del="",tres="",cuatro="";
            
            tab2 +="Tablas selecionadas: \n";
 
            for(int i = 0; i < tablas.size(); i++) {
                String audi="";
                tab2+=tablas.get(i)+"\n";
                String c10 = "desc " + tablas.get(i);
                Statement st10 = c.conectar().createStatement();
                st10.execute("use " + bd);
                ResultSet rs10 = st10.executeQuery(c10);
                
                
                tab+="create table "+tablas.get(i)+"_auditora(\n";
                tab+="id_audi int not null auto_increment primary key,\n";
                
                ins+="create trigger insertar"+tablas.get(i)+" after insert\n";
                ins+="on " + tablas.get(i) + "\n";
                ins+="for each row \n";
                ins+= "insert into "+tablas.get(i)+"_auditora (";
                
                mod+="create trigger modificar"+tablas.get(i)+" after update\n";
                mod+="on " + tablas.get(i) + "\n";
                mod+="for each row \n";
                mod+= "insert into "+tablas.get(i)+"_auditora (";
                
                del+="create trigger eliminar"+tablas.get(i)+" after delete\n";
                del+="on " + tablas.get(i) + "\n";
                del+="for each row \n";
                del+= "insert into "+tablas.get(i)+"_auditora (";
                
                int j = 0;
                int y = 0;
                columnas2.clear();
                tipo2.clear();
                while(rs10.next()){
                    columnas2.add(rs10.getString("Field"));
                    tipo2.add(rs10.getString("Type"));
                    tab+=columnas2.get(j)+" "+tipo2.get(y)+",\n";
                    uno+=columnas2.get(j)+",";
                    dos+="new."+columnas2.get(j)+",";
                    tres+=columnas2.get(j)+",";
                    cuatro+="old."+columnas2.get(j)+",";
                    j=j+1;
                    y=y+1;
                }
            tab+="fecha time,\n";tab+="actividad varchar(30),\n";tab+="usuario varchar(30));\n"+"\n";
            
            ins+=uno+"fecha,usuario,actividad)\n";ins+="value("+dos;ins+="now(),user(),'Inserto');\n"+"\n";
            mod+=uno+"fecha,usuario,actividad)\n";mod+="value("+dos;mod+="now(),user(),'Modifico');\n"+"\n";
            del+=tres+"fecha,usuario,actividad)\n";del+="value("+cuatro;del+="now(),user(),'Elimino');\n";
            
            audi+=tab+ins+mod+del+"\n";
            txtXML.setText(audi);
            txtTablas.setText(tab2);
            }
        }catch(SQLException ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
       login salir = new login();
       salir.setVisible(true);
       this.setVisible(false);
    }//GEN-LAST:event_btnSalirActionPerformed

    public void cargarBases(){
        try{
            comando2 = "show databases";
            st2 = c.conectar().createStatement();
            rs2 = st2.executeQuery(comando2);
            int i = 0;
            while(rs2.next()){
                i++;
                cmbDataBase.addItem(rs2.getString("Database"));
            }   
        }catch(SQLException ex){
            ex.printStackTrace();
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus lok and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btmLimpiar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox<String> cmbDataBase;
    private javax.swing.JComboBox<String> cmbTablas;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblDatos;
    private javax.swing.JTextArea txtTablas;
    private javax.swing.JTextArea txtXML;
    // End of variables declaration//GEN-END:variables
}

//Select  * from information_schema.columns WHERE TABLE_NAME='TU_TABLA' AND COLUMN_NAME='TU_COLUMNA'
//mysql -u root -p
//show databases;
//show tables;